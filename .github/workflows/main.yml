# .github/workflows/deploy-worker.yml

name: Deploy Cloudflare Worker

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the main branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job is named "deploy"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Installs Node.js, which is required for the Cloudflare Worker CLI (wrangler)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Or your desired Node.js version

      # Installs wrangler, the Cloudflare Workers CLI
      - name: Install Cloudflare Wrangler
        run: npm install -g wrangler

      # Installs any project-specific dependencies
      - name: Install project dependencies
        run: npm install

      # The main deployment step. This uses wrangler to deploy the worker.
      # The CF_API_TOKEN and CF_ACCOUNT_ID are injected securely from the repository secrets.
      - name: Deploy to Cloudflare Workers
        run: wrangler deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
